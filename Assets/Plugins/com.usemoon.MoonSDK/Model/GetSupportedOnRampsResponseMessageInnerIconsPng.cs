/*
 * moon-vault-api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = com.usemoon.MoonSDK.Client.OpenAPIDateConverter;

namespace com.usemoon.MoonSDK.Model
{
    /// <summary>
    /// GetSupportedOnRampsResponseMessageInnerIconsPng
    /// </summary>
    [DataContract(Name = "GetSupportedOnRampsResponse_message_inner_icons_png")]
    public partial class GetSupportedOnRampsResponseMessageInnerIconsPng : IEquatable<GetSupportedOnRampsResponseMessageInnerIconsPng>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetSupportedOnRampsResponseMessageInnerIconsPng" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetSupportedOnRampsResponseMessageInnerIconsPng() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetSupportedOnRampsResponseMessageInnerIconsPng" /> class.
        /// </summary>
        /// <param name="var160x160">var160x160 (required).</param>
        /// <param name="var32x32">var32x32 (required).</param>
        public GetSupportedOnRampsResponseMessageInnerIconsPng(string var160x160 = default(string), string var32x32 = default(string))
        {
            // to ensure "var160x160" is required (not null)
            if (var160x160 == null)
            {
                throw new ArgumentNullException("var160x160 is a required property for GetSupportedOnRampsResponseMessageInnerIconsPng and cannot be null");
            }
            this.Var160x160 = var160x160;
            // to ensure "var32x32" is required (not null)
            if (var32x32 == null)
            {
                throw new ArgumentNullException("var32x32 is a required property for GetSupportedOnRampsResponseMessageInnerIconsPng and cannot be null");
            }
            this.Var32x32 = var32x32;
        }

        /// <summary>
        /// Gets or Sets Var160x160
        /// </summary>
        [DataMember(Name = "160x160", IsRequired = true, EmitDefaultValue = true)]
        public string Var160x160 { get; set; }

        /// <summary>
        /// Gets or Sets Var32x32
        /// </summary>
        [DataMember(Name = "32x32", IsRequired = true, EmitDefaultValue = true)]
        public string Var32x32 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetSupportedOnRampsResponseMessageInnerIconsPng {\n");
            sb.Append("  Var160x160: ").Append(Var160x160).Append("\n");
            sb.Append("  Var32x32: ").Append(Var32x32).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetSupportedOnRampsResponseMessageInnerIconsPng);
        }

        /// <summary>
        /// Returns true if GetSupportedOnRampsResponseMessageInnerIconsPng instances are equal
        /// </summary>
        /// <param name="input">Instance of GetSupportedOnRampsResponseMessageInnerIconsPng to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetSupportedOnRampsResponseMessageInnerIconsPng input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Var160x160 == input.Var160x160 ||
                    (this.Var160x160 != null &&
                    this.Var160x160.Equals(input.Var160x160))
                ) && 
                (
                    this.Var32x32 == input.Var32x32 ||
                    (this.Var32x32 != null &&
                    this.Var32x32.Equals(input.Var32x32))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Var160x160 != null)
                {
                    hashCode = (hashCode * 59) + this.Var160x160.GetHashCode();
                }
                if (this.Var32x32 != null)
                {
                    hashCode = (hashCode * 59) + this.Var32x32.GetHashCode();
                }
                return hashCode;
            }
        }

    }

}
